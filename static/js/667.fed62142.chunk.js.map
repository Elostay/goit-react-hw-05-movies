{"version":3,"file":"static/js/667.fed62142.chunk.js","mappings":"8MAiBAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAa,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAAXN,EAAME,EAAAK,OAAA,QAAAC,IAAAN,EAAA,GAAAA,EAAA,GAAG,GAAEE,EAAAE,KAAA,EACjCb,EAAAA,EAAAA,IAAU,GAADgB,OAC3BV,EAAa,6CAAAU,OAA4CT,IAC5D,KAAD,EAFa,OAARC,EAAQG,EAAAM,KAAAN,EAAAO,OAAA,SAGPV,EAASW,MAAI,wBAAAR,EAAAS,OAAA,GAAAf,EAAA,KACrB,gBALqBgB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAZ,UAAA,I,iHCkDtB,UAjEe,WACb,IAAAa,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpCG,GAAwCV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,GAAWC,EAAAA,EAAAA,MAMXC,GAAoBC,EAAAA,EAAAA,cAAWtC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAqC,EAAA,OAAAtC,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEAZ,EAAAA,EAAAA,GAAU,eAAD,UAAAe,OAE/BW,IACV,KAAD,EAHKe,EAAmB/B,EAAAM,KAKzBoB,EAAgBK,EAAoBC,SAAShC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAiC,GAAAjC,EAAA,SAE7CkC,QAAQC,IAAGnC,EAAAiC,IAAQ,yBAAAjC,EAAAS,OAAA,GAAAf,EAAA,kBAEpB,CAACsB,KAQJoB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQhB,EAAaiB,IAAI,UAC3BD,GAAOpB,EAASoB,EACtB,GAAG,CAAChB,IASJ,OACEkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,SATW,SAAAC,GAEnB,GADAA,EAAEC,kBACG5B,EAAO,OAAOM,EAAgB,CAAC,GACpCA,EAAgB,CAAEuB,OAAQ7B,IAC1Ba,GACF,EAIiCY,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,KAAK,SACLX,MAAOrB,EACPiC,SA1Ca,SAAH1D,GAA+B,IAAf8C,EAAK9C,EAAf2D,OAAUb,MAC3BA,GAAOf,EAAgB,CAAC,GAC7BL,EAASoB,EACX,KAyCMS,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQN,SAAC,eAExBK,EAAAA,EAAAA,KAAA,OAAAL,SACGhB,EAAa0B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OAC5BR,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAAUC,GAAE,GAAAnD,OAAKgD,GAAMI,MAAO9B,EAASc,SACzCa,GADQD,EAEJ,QAKjB,C","sources":["helpers/API.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// const key = 'ca07cfa0a72b49d166a90c6c0253cddf';\n\n// const params = new URLSearchParams({\n//   api_key: key,\n// });\n\n// export const getMovies = async typeOfRequest => {\n//   const response = await axios.get(`${typeOfRequest}?${params}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async (typeOfRequest, params = '') => {\n  const response = await axios.get(\n    `${typeOfRequest}?api_key=ca07cfa0a72b49d166a90c6c0253cddf${params}`\n  );\n  return response.data;\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'helpers/API';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [moviesByName, setMoviesByName] = useState([]);\n\n  const location = useLocation();\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n  const fetchMoviesByName = useCallback(async () => {\n    try {\n      const moviesRequestByName = await getMovies(\n        `search/movie`,\n        `&query=${query}`\n      );\n\n      setMoviesByName(moviesRequestByName.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [query]);\n\n  //   useEffect(() => {\n  //     if (query) {\n  //       fetchMoviesByName();\n  //     }\n  //   }, [fetchMoviesByName, query]);\n\n  useEffect(() => {\n    const value = searchParams.get('search');\n    if (value) setQuery(value);\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) return setSearchParams({});\n    setSearchParams({ search: query });\n    fetchMoviesByName();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div>\n        {moviesByName.map(({ id, title }) => (\n          <Link key={id} to={`${id}`} state={location}>\n            {title}\n          </Link>\n        ))}\n      </div>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","typeOfRequest","params","response","_args","arguments","_context","prev","next","length","undefined","concat","sent","abrupt","data","stop","_x","apply","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","moviesByName","setMoviesByName","location","useLocation","fetchMoviesByName","useCallback","moviesRequestByName","results","t0","console","log","useEffect","value","get","_jsxs","_Fragment","children","onSubmit","e","preventDefault","search","_jsx","type","name","onChange","target","map","_ref3","id","title","Link","to","state"],"sourceRoot":""}