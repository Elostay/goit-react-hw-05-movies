{"version":3,"file":"static/js/387.2b319359.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","helpers/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  row-gap: 50px;\n`;\nexport const CastItem = styled.li`\n  width: calc((100% - 20px) / 3);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  gap: 20px;\n  font-weight: 500;\n  @media (max-width: 650px) {\n    width: calc((100% - 10px) / 2);\n  }\n`;\nexport const Img = styled.img`\n  width: 200px;\n  border-radius: 20px;\n`;\nexport const ActorName = styled.h2`\n  display: inline-block;\n  padding: 10px;\n  border-radius: 20px;\n  color: #662549;\n  margin-bottom: 20px;\n  font-size: 20px;\n  background-color: #e8bcb9;\n`;\n","import { fetchMovieCastAPI } from '../../helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport oops from '../../img/oops.jpg';\nimport { ActorName, CastItem, CastList, Img } from './Cast.styled';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [infoCast, setInfoCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const cast = await fetchMovieCastAPI(movieId);\n\n        setInfoCast(cast.cast.slice(0, 12));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {!isLoading && infoCast.length === 0 && <div>Not found</div>}\n      {infoCast.length !== 0 &&\n        infoCast.map(el => (\n          <CastItem key={el.id}>\n            {el.profile_path ? (\n              <Img\n                width=\"100\"\n                height=\"100\"\n                src={`${baseUrl}${el.profile_path}`}\n                alt=\"poster\"\n              />\n            ) : (\n              <Img width=\"100\" height=\"100\" src={oops} alt=\"404\" />\n            )}\n\n            <ActorName>\n              {el.name} : {el.character}\n            </ActorName>\n          </CastItem>\n        ))}\n    </CastList>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","Img","_templateObject3","ActorName","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","infoCast","setInfoCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","cast","_context","prev","next","fetchMovieCastAPI","sent","slice","t0","console","log","finish","stop","apply","arguments","_jsxs","children","length","_jsx","map","el","profile_path","width","height","src","concat","alt","oops","name","character","id","axios","api_key","getMovies","endpoint","queryParams","response","_args","undefined","params","abrupt","data","_x","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","fetchMovieReviewsAPI","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}