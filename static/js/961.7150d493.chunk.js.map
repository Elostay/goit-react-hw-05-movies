{"version":3,"file":"static/js/961.7150d493.chunk.js","mappings":"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","sources":["helpers/API.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n","import { fetchMovieInfoAPI } from 'helpers/API';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport oops from '../../img/oops.jpg';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState({});\n  const [infoGenres, setInfoGenres] = useState([]);\n  const [isPosterPath, setIsPosterPath] = useState(true);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const goBack = useRef(location);\n\n  useEffect(() => {\n    const movieInfo = async () => {\n      try {\n        const description = await fetchMovieInfoAPI(movieId);\n\n        setInfo(description);\n        setInfoGenres(description.genres);\n      } catch (error) {\n        console.log(error);\n        navigate('/movies');\n      } finally {\n        info.poster_path === null\n          ? setIsPosterPath(false)\n          : setIsPosterPath(true);\n      }\n    };\n    movieInfo();\n  }, [info.poster_path, movieId, navigate]);\n\n  return (\n    <>\n      <Link to={goBack.current.state}>Go back</Link>\n\n      {!isPosterPath && <img width=\"100\" height=\"100\" src={oops} alt=\"404\" />}\n\n      {info.poster_path && (\n        <img\n          width=\"100\"\n          height=\"100\"\n          src={`${baseUrl}${info.poster_path}`}\n          alt=\"poster\"\n        />\n      )}\n\n      <h2>{info.title}</h2>\n      <p>Overview: {info.overview}</p>\n      {infoGenres.map(el => (\n        <p key={el.id}>{el.name}</p>\n      ))}\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","api_key","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","queryParams","response","_args","arguments","_context","prev","next","length","undefined","params","sent","abrupt","data","stop","_x","apply","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","movieId","_context4","concat","_x3","fetchMovieCastAPI","_ref5","_callee5","_context5","_x4","fetchMovieReviewsAPI","_ref6","_callee6","_context6","_x5","useParams","_useState","useState","_useState2","_slicedToArray","info","setInfo","_useState3","_useState4","infoGenres","setInfoGenres","_useState5","_useState6","isPosterPath","setIsPosterPath","location","useLocation","navigate","useNavigate","goBack","useRef","useEffect","movieInfo","description","genres","t0","console","log","poster_path","finish","_jsxs","_Fragment","children","_jsx","Link","to","current","state","width","height","src","oops","alt","title","overview","map","el","name","id","Outlet"],"sourceRoot":""}