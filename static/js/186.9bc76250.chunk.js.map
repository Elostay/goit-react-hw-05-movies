{"version":3,"file":"static/js/186.9bc76250.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAehC,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,GAAU,SAADC,OAAUnB,EAAO,aAAY,KAAD,EAApDc,EAAMC,EAAAK,KAEZb,EAAcO,EAAOO,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE9BQ,QAAQC,IAAGT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAEtB,kBARc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KASflB,GACF,GAAG,CAACT,KAGF4B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACyB,IAAtBxB,EAAWyB,OACVzB,EAAW0B,KAAI,SAAAC,GAAE,OACfC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAGE,UACRP,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,EAAGG,YAFCH,EAAGI,GAGP,KAGRT,EAAAA,EAAAA,KAAA,OAAAE,SAAK,eAIb,C,8FClBAQ,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMpB,EAAS,eAAAR,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO0B,GAAa,IAAAC,EAAAC,EAAAC,EAAAf,UAAA,OAAAf,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAAXuB,EAAME,EAAAX,OAAA,QAAAY,IAAAD,EAAA,GAAAA,EAAA,GAAG,GAAE3B,EAAAE,KAAA,EACjCqB,EAAAA,EAAAA,IAAU,GAADnB,OAC3BoB,EAAa,6CAAApB,OAA4CqB,IAC5D,KAAD,EAFa,OAARC,EAAQ1B,EAAAK,KAAAL,EAAA6B,OAAA,SAGPH,EAASI,MAAI,wBAAA9B,EAAAU,OAAA,GAAAZ,EAAA,KACrB,gBALqBiC,GAAA,OAAApC,EAAAgB,MAAA,KAAAC,UAAA,I","sources":["components/Reviews/Reviews.jsx","helpers/API.js"],"sourcesContent":["import { getMovies } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [infoReview, setInfoReview] = useState([]);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const review = await getMovies(`movie/${movieId}/reviews`);\n\n        setInfoReview(review.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {infoReview.length !== 0 ? (\n        infoReview.map(el => (\n          <div key={el.id}>\n            <h2>{el.author}</h2>\n            <p>{el.content}</p>\n          </div>\n        ))\n      ) : (\n        <div>Not found</div>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// const key = 'ca07cfa0a72b49d166a90c6c0253cddf';\n\n// const params = new URLSearchParams({\n//   api_key: key,\n// });\n\n// export const getMovies = async typeOfRequest => {\n//   const response = await axios.get(`${typeOfRequest}?${params}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async (typeOfRequest, params = '') => {\n  const response = await axios.get(\n    `${typeOfRequest}?api_key=ca07cfa0a72b49d166a90c6c0253cddf${params}`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","infoReview","setInfoReview","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","review","_context","prev","next","getMovies","concat","sent","results","t0","console","log","stop","apply","arguments","_jsx","_Fragment","children","length","map","el","_jsxs","author","content","id","axios","typeOfRequest","params","response","_args","undefined","abrupt","data","_x"],"sourceRoot":""}