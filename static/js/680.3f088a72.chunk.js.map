{"version":3,"file":"static/js/680.3f088a72.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","helpers/API.js","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.js"],"sourcesContent":["import { Item, Links, List, OopsImg } from 'pages/HomePage/HomePage.styled';\nimport { useLocation } from 'react-router-dom';\nimport oops from '../../img/oops.jpg';\nimport { Img } from '../../pages/HomePage/HomePage.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <>\n      <List className=\"text-xl text-whiteMy\">\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Links to={`/movies/${movie.id}`} key={movie.id} state={location}>\n              <>\n                {movie.poster_path ? (\n                  <Img\n                    width=\"100\"\n                    height=\"100\"\n                    src={`${baseUrl}${movie.poster_path}`}\n                    alt=\"poster\"\n                  />\n                ) : (\n                  <OopsImg width=\"100\" height=\"100\" src={oops} alt=\"404\" />\n                )}\n              </>\n\n              {<p>{movie.title}</p> || <p>{movie.name}</p>}\n            </Links>\n          </Item>\n        ))}\n        {movies.length === 0 && <p>Not found</p>}\n      </List>\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchTrendingAPI } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { Title } from './HomePage.styled';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const popularMoviesRequest = await fetchTrendingAPI();\n\n        setPopularMovies(popularMoviesRequest.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return (\n    <>\n      <Title>Popular movies</Title>\n      {<MoviesList movies={popularMovies} />}\n    </>\n  );\n};\nexport default Home;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  margin-top: 40px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\nexport const Title = styled.p`\n  font-size: 40px;\n  color: wheat;\n`;\nexport const Item = styled.li`\n  width: calc((100% - 40px) / 5);\n  text-align: center;\n  @media (max-width: 650px) {\n    width: calc((100% - 30px) / 4);\n  }\n  @media (max-width: 450px) {\n    width: calc((100% - 20px) / 3);\n  }\n`;\nexport const Links = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  border-radius: 20px;\n`;\nexport const OopsImg = styled.img`\n  width: 200px;\n\n  border-radius: 20px;\n  @media (min-width: 1070px) {\n    height: 300px;\n  }\n`;\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","_Fragment","children","_jsxs","List","className","map","movie","Item","Links","to","concat","id","state","poster_path","Img","width","height","src","alt","OopsImg","oops","title","name","length","axios","api_key","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","queryParams","response","_args","arguments","_context","prev","next","undefined","params","sent","abrupt","data","stop","_x","apply","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","movieId","_context4","_x3","fetchMovieCastAPI","_ref5","_callee5","_context5","_x4","fetchMovieReviewsAPI","_ref6","_callee6","_context6","_x5","_useState","useState","_useState2","_slicedToArray","popularMovies","setPopularMovies","useEffect","fetchMovies","popularMoviesRequest","results","t0","console","log","Title","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Link","_templateObject4","_templateObject5","_templateObject6"],"sourceRoot":""}