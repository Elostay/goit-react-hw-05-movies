{"version":3,"file":"static/js/33.f167c138.chunk.js","mappings":"4QAEaA,EAAWC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAGpBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAKhBG,EAASL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2KASlBK,EAASP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uF,+LCjB9BO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAkB,OAAhBN,EAAWE,EAAAK,OAAA,QAAAC,IAAAN,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACE,EAAAE,KAAA,EACjCd,EAAAA,EAAAA,IAAUO,EAAU,CAAEU,OAAQT,IAAe,KAAD,EAArD,OAARC,EAAQG,EAAAM,KAAAN,EAAAO,OAAA,SACPV,EAASW,MAAI,wBAAAR,EAAAS,OAAA,GAAAf,EAAA,KACrB,gBAHqBgB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAZ,UAAA,KAKTa,EAAgB,eAAAC,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqB,IAAA,OAAArB,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACO,MAApB,qBAAoBa,EAAAb,KAAA,EACxBZ,EADI,sBACgB,KAAD,SAAAyB,EAAAR,OAAA,SAAAQ,EAAAT,MAAA,wBAAAS,EAAAN,OAAA,GAAAK,EAAA,KACjC,kBAH4B,OAAAD,EAAAF,MAAA,KAAAZ,UAAA,KAKhBiB,EAAoB,eAAAC,GAAAzB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyB,EAAMC,GAAK,OAAA1B,IAAAA,MAAA,SAAA2B,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAC/B,qBAAAkB,EAAAlB,KAAA,EACDZ,EADC,eACmB,CAAE6B,MAAAA,IAAS,KAAD,SAAAC,EAAAb,OAAA,SAAAa,EAAAd,MAAA,wBAAAc,EAAAX,OAAA,GAAAS,EAAA,KAC5C,gBAHgCG,GAAA,OAAAJ,EAAAN,MAAA,KAAAZ,UAAA,KAKpBuB,EAAiB,eAAAC,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+B,EAAMC,GAAO,IAAA9B,EAAA,OAAAF,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACX,OAA3BP,EAAQ,SAAAgC,OAAYF,GAAOC,EAAAxB,KAAA,EACpBZ,EAAUK,GAAU,KAAD,SAAA+B,EAAAnB,OAAA,SAAAmB,EAAApB,MAAA,wBAAAoB,EAAAjB,OAAA,GAAAe,EAAA,KACjC,gBAH6BI,GAAA,OAAAL,EAAAZ,MAAA,KAAAZ,UAAA,KAKjB8B,EAAiB,eAAAC,GAAAtC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsC,EAAMN,GAAO,IAAA9B,EAAA,OAAAF,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OACX,OAA3BP,EAAQ,SAAAgC,OAAYF,EAAO,YAAAO,EAAA9B,KAAA,EACpBZ,EAAUK,GAAU,KAAD,SAAAqC,EAAAzB,OAAA,SAAAyB,EAAA1B,MAAA,wBAAA0B,EAAAvB,OAAA,GAAAsB,EAAA,KACjC,gBAH6BE,GAAA,OAAAH,EAAAnB,MAAA,KAAAZ,UAAA,KAKjBmC,EAAoB,eAAAC,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2C,EAAMX,GAAO,IAAA9B,EAAA,OAAAF,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OACd,OAA3BP,EAAQ,SAAAgC,OAAYF,EAAO,YAAAY,EAAAnC,KAAA,EACpBZ,EAAUK,GAAU,KAAD,SAAA0C,EAAA9B,OAAA,SAAA8B,EAAA/B,MAAA,wBAAA+B,EAAA5B,OAAA,GAAA2B,EAAA,KACjC,gBAHgCE,GAAA,OAAAH,EAAAxB,MAAA,KAAAZ,UAAA,I,4LC9BpBwC,GAAiB5D,EAAAA,EAAAA,GAAO6D,EAAAA,GAAP7D,CAAeC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMhC4D,EAAO9D,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mDAIjB6D,GAAS/D,EAAAA,EAAAA,GAAOgE,EAAAA,GAAPhE,CAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4LAUrB+D,EAA0BjE,EAAAA,EAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qEAMpCgE,EAAYlE,EAAAA,EAAAA,IAAUmE,IAAAA,GAAAjE,EAAAA,EAAAA,GAAA,4PAatBkE,EAAapE,EAAAA,EAAAA,GAASqE,IAAAA,GAAAnE,EAAAA,EAAAA,GAAA,8BAItBoE,EAAgBtE,EAAAA,EAAAA,IAAUuE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,8IAS1BsE,EAAMxE,EAAAA,EAAAA,IAAUyE,IAAAA,GAAAvE,EAAAA,EAAAA,GAAA,mDAIhBwE,EAAS1E,EAAAA,EAAAA,IAAU2E,IAAAA,GAAAzE,EAAAA,EAAAA,GAAA,kHAOnB0E,EAAa5E,EAAAA,EAAAA,IAAU6E,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,mD,kBCsBpC,EAlEqB,WACnB,IAAQ4C,GAAYgC,EAAAA,EAAAA,MAAZhC,QACRiC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwCT,EAAAA,EAAAA,WAAS,GAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAOL,GAqBtB,OAnBAM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAxF,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAsF,EAAA,OAAAvF,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEYoB,EAAAA,EAAAA,IAAkBG,GAAS,KAAD,EAA9CuD,EAAWhF,EAAAM,KAEjByD,EAAQiB,GACRb,EAAca,EAAYC,QAAQjF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkF,GAAAlF,EAAA,SAElCmF,QAAQC,IAAGpF,EAAAkF,IACXR,EAAS,WAAW,QAIM,OAJN1E,EAAAC,KAAA,GAEC,OAArB6D,EAAKuB,YACDd,GAAgB,GAChBA,GAAgB,GAAMvE,EAAAsF,OAAA,6BAAAtF,EAAAS,OAAA,GAAAf,EAAA,wBAE7B,kBAdc,OAAAH,EAAAoB,MAAA,KAAAZ,UAAA,KAefgF,GACF,GAAG,CAACjB,EAAKuB,YAAa5D,EAASiD,KAG7Ba,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAChD,EAAM,CAACiD,GAAIf,EAAOgB,QAAQC,MAAMJ,SAAC,aAClCF,EAAAA,EAAAA,MAAC1C,EAAS,CAAA4C,SAAA,EACNnB,IACAoB,EAAAA,EAAAA,KAACjD,EAAI,CAACqD,MAAM,MAAMC,OAAO,MAAMC,IAAKC,EAAMC,IAAI,QAG/CpC,EAAKuB,cACJK,EAAAA,EAAAA,KAACvC,EAAG,CACF2C,MAAM,MACNC,OAAO,MACPC,IAAG,GAAArE,OA1CC,mCA0CWA,OAAGmC,EAAKuB,aACvBa,IAAI,YAIRX,EAAAA,EAAAA,MAACtC,EAAa,CAAAwC,SAAA,EACZC,EAAAA,EAAAA,KAAC3C,EAAU,CAAA0C,SAAE3B,EAAKqC,SAClBZ,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,aAAW3B,EAAKsC,aACnBb,EAAAA,EAAAA,MAAClC,EAAM,CAAAoC,SAAA,EACLC,EAAAA,EAAAA,KAACnC,EAAU,CAAAkC,SAAC,YACW,IAAtBvB,EAAW/D,OACV+D,EAAWmC,KAAI,SAAAC,GAAE,OAAIZ,EAAAA,EAAAA,KAAA,QAAAD,SAAmBa,EAAGC,MAAXD,EAAGE,GAAoB,KAEvDd,EAAAA,EAAAA,KAAChH,EAAAA,GAAQ,CAAA+G,SAAC,wBAKlBF,EAAAA,EAAAA,MAAC3C,EAAuB,CAAA6C,SAAA,EACtBC,EAAAA,EAAAA,KAACnD,EAAc,CAACoD,GAAG,OAAMF,SAAC,UAC1BC,EAAAA,EAAAA,KAACnD,EAAc,CAACoD,GAAG,UAASF,SAAC,gBAE/BC,EAAAA,EAAAA,KAACe,EAAAA,GAAM,MAGb,C","sources":["components/Reviews/Reviews.styled.js","helpers/API.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NotFound = styled.li`\n  color: white;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const Author = styled.h2`\n  display: inline-block;\n  padding: 10px;\n  border-radius: 20px;\n  color: #e8bcb9;\n  margin-bottom: 20px;\n  font-size: 30px;\n  background-color: #662549;\n`;\nexport const Review = styled.p`\n  font-size: 18px;\n  @media (max-width: 360px) {\n    font-size: 16px;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n","import styled from '@emotion/styled';\nimport { NavLink, Link } from 'react-router-dom';\nexport const BtnLoadAddInfo = styled(NavLink)`\n  &.active {\n    color: white;\n  }\n  font-size: 30px;\n`;\nexport const Oops = styled.img`\n  width: 200px;\n  border-radius: 20px;\n`;\nexport const GoBack = styled(Link)`\n  display: block;\n  margin: 100px 0 50px 0;\n  font-size: 20px;\n  max-width: 120px;\n  background-color: #ae445a;\n  padding: 15px;\n  border-radius: 20px;\n  color: #e8bcb9;\n`;\nexport const BtnLoadAddInfoContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  margin: 100px 0 50px 0;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 50px;\n  max-width: 720px;\n  margin: 30px 0 30px 0;\n  margin: 0 auto;\n  text-align: center;\n  @media (max-width: 575px) {\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\nexport const TitleMovie = styled.h2`\n  font-size: 30px;\n`;\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  gap: 30px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  border-radius: 20px;\n`;\nexport const Genres = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const GenresSpan = styled.div`\n  font-weight: 700;\n  font-size: 20px;\n`;\n","import { fetchMovieInfoAPI } from 'helpers/API';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport oops from '../../img/oops.jpg';\nimport {\n  BtnLoadAddInfo,\n  BtnLoadAddInfoContainer,\n  Container,\n  ContainerInfo,\n  Genres,\n  GenresSpan,\n  GoBack,\n  Img,\n  Oops,\n  TitleMovie,\n} from './MovieDetails.styled';\nimport { NotFound } from 'components/Reviews/Reviews.styled';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState({});\n  const [infoGenres, setInfoGenres] = useState([]);\n  const [isPosterPath, setIsPosterPath] = useState(true);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const goBack = useRef(location);\n\n  useEffect(() => {\n    const movieInfo = async () => {\n      try {\n        const description = await fetchMovieInfoAPI(movieId);\n\n        setInfo(description);\n        setInfoGenres(description.genres);\n      } catch (error) {\n        console.log(error);\n        navigate('/movies');\n      } finally {\n        info.poster_path === null\n          ? setIsPosterPath(false)\n          : setIsPosterPath(true);\n      }\n    };\n    movieInfo();\n  }, [info.poster_path, movieId, navigate]);\n\n  return (\n    <>\n      <GoBack to={goBack.current.state}>Go back</GoBack>\n      <Container>\n        {!isPosterPath && (\n          <Oops width=\"100\" height=\"100\" src={oops} alt=\"404\" />\n        )}\n\n        {info.poster_path && (\n          <Img\n            width=\"100\"\n            height=\"100\"\n            src={`${baseUrl}${info.poster_path}`}\n            alt=\"poster\"\n          />\n        )}\n\n        <ContainerInfo>\n          <TitleMovie>{info.title}</TitleMovie>\n          <p>Overview: {info.overview}</p>\n          <Genres>\n            <GenresSpan>Genres:</GenresSpan>\n            {infoGenres.length !== 0 ? (\n              infoGenres.map(el => <span key={el.id}>{el.name}</span>)\n            ) : (\n              <NotFound>Not found</NotFound>\n            )}\n          </Genres>\n        </ContainerInfo>\n      </Container>\n      <BtnLoadAddInfoContainer>\n        <BtnLoadAddInfo to=\"cast\">Cast</BtnLoadAddInfo>\n        <BtnLoadAddInfo to=\"reviews\">Reviews</BtnLoadAddInfo>\n      </BtnLoadAddInfoContainer>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["NotFound","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Author","_templateObject3","Review","_templateObject4","axios","api_key","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","queryParams","response","_args","arguments","_context","prev","next","length","undefined","params","sent","abrupt","data","stop","_x","apply","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","movieId","_context4","concat","_x3","fetchMovieCastAPI","_ref5","_callee5","_context5","_x4","fetchMovieReviewsAPI","_ref6","_callee6","_context6","_x5","BtnLoadAddInfo","NavLink","Oops","GoBack","Link","BtnLoadAddInfoContainer","Container","_templateObject5","TitleMovie","_templateObject6","ContainerInfo","_templateObject7","Img","_templateObject8","Genres","_templateObject9","GenresSpan","_templateObject10","useParams","_useState","useState","_useState2","_slicedToArray","info","setInfo","_useState3","_useState4","infoGenres","setInfoGenres","_useState5","_useState6","isPosterPath","setIsPosterPath","location","useLocation","navigate","useNavigate","goBack","useRef","useEffect","movieInfo","description","genres","t0","console","log","poster_path","finish","_jsxs","_Fragment","children","_jsx","to","current","state","width","height","src","oops","alt","title","overview","map","el","name","id","Outlet"],"sourceRoot":""}