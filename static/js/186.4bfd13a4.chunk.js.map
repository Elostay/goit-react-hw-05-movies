{"version":3,"file":"static/js/186.4bfd13a4.chunk.js","mappings":"yNAqCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,GAAU,SAADC,OAAUvB,EAAO,aAAY,KAAD,EAApDkB,EAAMC,EAAAK,KAEZjB,EAAcW,EAAOO,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE9BQ,QAAQC,IAAGT,EAAAO,IAAQ,QAEC,OAFDP,EAAAC,KAAA,GAEnBT,GAAa,GAAOQ,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,wBAEvB,kBAVc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAWfnB,GACF,GAAG,CAACb,KAGFiC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIzB,GAAmC,IAAtBJ,EAAW8B,SAAgBC,EAAAA,EAAAA,KAAA,OAAAF,SAAK,cACxB,IAAtB7B,EAAW8B,QACV9B,EAAWgC,KAAI,SAAAC,GAAE,OACfN,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKI,EAAGC,UACRH,EAAAA,EAAAA,KAAA,KAAAF,SAAII,EAAGE,YAFCF,EAAGG,GAGP,MAIhB,C,8FCnBAC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMrB,EAAS,eAAAR,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO2B,GAAa,IAAAC,EAAAC,EAAAC,EAAAf,UAAA,OAAAhB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAAXwB,EAAME,EAAAX,OAAA,QAAAY,IAAAD,EAAA,GAAAA,EAAA,GAAG,GAAE5B,EAAAE,KAAA,EACjCsB,EAAAA,EAAAA,IAAU,GAADpB,OAC3BqB,EAAa,6CAAArB,OAA4CsB,IAC5D,KAAD,EAFa,OAARC,EAAQ3B,EAAAK,KAAAL,EAAA8B,OAAA,SAGPH,EAASI,MAAI,wBAAA/B,EAAAW,OAAA,GAAAb,EAAA,KACrB,gBALqBkC,GAAA,OAAArC,EAAAiB,MAAA,KAAAC,UAAA,I","sources":["components/Reviews/Reviews.jsx","helpers/API.js"],"sourcesContent":["import { getMovies } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [infoReview, setInfoReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const review = await getMovies(`movie/${movieId}/reviews`);\n\n        setInfoReview(review.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {!isLoading && infoReview.length === 0 && <div>Not found</div>}\n      {infoReview.length !== 0 &&\n        infoReview.map(el => (\n          <div key={el.id}>\n            <h2>{el.author}</h2>\n            <p>{el.content}</p>\n          </div>\n        ))}\n    </>\n  );\n};\nexport default Reviews;\n","// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// const key = 'ca07cfa0a72b49d166a90c6c0253cddf';\n\n// const params = new URLSearchParams({\n//   api_key: key,\n// });\n\n// export const getMovies = async typeOfRequest => {\n//   const response = await axios.get(`${typeOfRequest}?${params}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async (typeOfRequest, params = '') => {\n  const response = await axios.get(\n    `${typeOfRequest}?api_key=ca07cfa0a72b49d166a90c6c0253cddf${params}`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","infoReview","setInfoReview","_useState3","_useState4","isLoading","setIsLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","review","_context","prev","next","getMovies","concat","sent","results","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","el","author","content","id","axios","typeOfRequest","params","response","_args","undefined","abrupt","data","_x"],"sourceRoot":""}