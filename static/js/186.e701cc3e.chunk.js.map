{"version":3,"file":"static/js/186.e701cc3e.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.js","helpers/API.js"],"sourcesContent":["import { fetchMovieReviewsAPI } from '../../helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Author, List, NotFound, Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [infoReview, setInfoReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const review = await fetchMovieReviewsAPI(movieId);\n\n        setInfoReview(review.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <List>\n      {!isLoading && infoReview.length === 0 && <NotFound>Not found</NotFound>}\n      {infoReview.length !== 0 &&\n        infoReview.map(el => (\n          <li key={el.id}>\n            <Author>{el.author}</Author>\n            <Review>{el.content}</Review>\n          </li>\n        ))}\n    </List>\n  );\n};\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const NotFound = styled.li`\n  color: white;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const Author = styled.h2`\n  display: inline-block;\n  padding: 10px;\n  border-radius: 20px;\n  color: #e8bcb9;\n  margin-bottom: 20px;\n  font-size: 30px;\n  background-color: #662549;\n`;\nexport const Review = styled.p`\n  font-size: 18px;\n  @media (max-width: 360px) {\n    font-size: 16px;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","infoReview","setInfoReview","_useState3","_useState4","isLoading","setIsLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","review","_context","prev","next","fetchMovieReviewsAPI","sent","results","t0","console","log","finish","stop","apply","arguments","_jsxs","List","children","length","_jsx","NotFound","map","el","Author","author","Review","content","id","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","axios","api_key","getMovies","endpoint","queryParams","response","_args","undefined","params","abrupt","data","_x","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","_context4","concat","_x3","fetchMovieCastAPI","_ref5","_callee5","_context5","_x4","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}