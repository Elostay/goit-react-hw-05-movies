{"version":3,"file":"static/js/247.9dff0fc9.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","helpers/API.js"],"sourcesContent":["import { fetchMovieCastAPI } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport oops from '../../img/oops.jpg';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [infoCast, setInfoCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const cast = await fetchMovieCastAPI(movieId);\n\n        setInfoCast(cast.cast.slice(0, 10));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {!isLoading && infoCast.length === 0 && <div>Not found</div>}\n      {infoCast.length !== 0 &&\n        infoCast.map(el => (\n          <div key={el.id}>\n            {el.profile_path ? (\n              <img\n                width=\"100\"\n                height=\"100\"\n                src={`${baseUrl}${el.profile_path}`}\n                alt=\"poster\"\n              />\n            ) : (\n              <img width=\"100\" height=\"100\" src={oops} alt=\"404\" />\n            )}\n\n            <h2>\n              {el.name} : {el.character}\n            </h2>\n          </div>\n        ))}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","infoCast","setInfoCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","cast","_context","prev","next","fetchMovieCastAPI","sent","slice","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","el","profile_path","width","height","src","concat","alt","oops","name","character","id","axios","api_key","getMovies","endpoint","queryParams","response","_args","undefined","params","abrupt","data","_x","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","fetchMovieReviewsAPI","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}