{"version":3,"file":"static/js/680.f3e7e041.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.styled.js","components/MoviesList/MoviesList.jsx","helpers/API.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { List } from 'pages/HomePage/HomePage.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n          {movie.title ?? movie.name}\n        </Link>\n      ))}\n    </List>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'ca07cfa0a72b49d166a90c6c0253cddf',\n};\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrendingAPI = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n\nexport const fetchMoviesByNameAPI = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\nexport const fetchMovieInfoAPI = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieCastAPI = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n\nexport const fetchMovieReviewsAPI = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchTrendingAPI } from 'helpers/API';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const popularMoviesRequest = await fetchTrendingAPI();\n\n        setPopularMovies(popularMoviesRequest.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return <MoviesList movies={popularMovies} />;\n};\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","movie","_movie$title","Link","to","concat","id","state","title","name","axios","api_key","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","queryParams","response","_args","arguments","_context","prev","next","length","undefined","params","sent","abrupt","data","stop","_x","apply","fetchTrendingAPI","_ref2","_callee2","_context2","fetchMoviesByNameAPI","_ref3","_callee3","query","_context3","_x2","fetchMovieInfoAPI","_ref4","_callee4","movieId","_context4","_x3","fetchMovieCastAPI","_ref5","_callee5","_context5","_x4","fetchMovieReviewsAPI","_ref6","_callee6","_context6","_x5","_useState","useState","_useState2","_slicedToArray","popularMovies","setPopularMovies","useEffect","fetchMovies","popularMoviesRequest","results","t0","console","log"],"sourceRoot":""}